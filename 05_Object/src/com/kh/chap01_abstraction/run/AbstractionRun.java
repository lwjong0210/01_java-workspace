package com.kh.chap01_abstraction.run;

public class AbstractionRun {
	
	/*
	 * 1. 객체지향언어 : "객체"를 "지향"하는 "언어"로 "객체 중심"으로 돌아간다고 생각하면됨.
	 * 	지양 => 좋지 않음
	 * 	지향	=> 좋음 (추구한다.)
	 * 
	 * 2. 객체란 : 현실세계에 독립적으로 존재(목적이 있고 가치가 있고 의미가 있는)하는 모든 것들을 의미 (유형, 무형, 개념, ...)
	 * 				현실세계에서는 객체들간의 상호작용으로 돌아감 (내가 물을 먹는다)
	 * 
	 * 3. 객체지향 프로그래밍 : 현실세계의 객체들간의 상호작용
	 * 						프로그래밍을 통해 가상세계로 구현하는 것 (내가 쇼핑몰에서 로그인 한다)
	 * 
	 * 4. 구현하고자 하는 프로그램상의 필요한 객체들을 만들기 위해서(즉, 생성하기 위해서)
	 * 		: 클래스라는 틀을 먼저 만들어야됨!! (클래스란? 각 객체들의 속성(정보)들을 담아낼 그릇 같은 존재) => 이름,나이,주소,휴대폰번호 등등을 담을 수 있는 그릇
	 * 		>> 어떻게 만드는걸까? => 추상화 + 캡슐화 접목해서 만들어야함!
	 * 
	 * 5. 추상화 과정
	 * 	1) 내가 구현하고자 하는 프로그램에서 필요한 객체들을 생각해볼 것 => 쇼핑몰
	 *	2) 그 객체들이 가지는 공통적인 속성, 기능들을 모두 추출 => 이름, 나이, 주소, 휴대폰번호, mbti, 혈액형..)
	 *	3) 추출한 것들을 가지고 내가 구현하고자 했던 프로그램 "실질적인 목적"에 맞춰 불필요한 속성, 기능들을 제거할 것 => mbti, 혈액형.. 
	 *	4) 그렇게 최종적으로 추려진 속성들을 가지고 어떤 자료형으로, 어떤 변수명으로 사용할건지 생각
	 *
	 *	ex) 학생 관리 프로그램
	 *		1) 학생관련객체 (문동은 학생, 박연진 학생, 이사라 학생, ...)
	 *		2) 공통적인 속성 및 기능들(이름, 나이, 주소, 전화번호, 키, 몸무게, 달리기속도, 학년, 반, 국어점수, 수학점수, 영어점수, 머리색깔, 발사이즈, 밥먹는다, 잠잔다,...)
	 *		3) 학생 "인적사항"을 관리하는 프로그램 이라고 한다면 : 아름, 나이, 주소, 전화번호, 학년, 반
	 *		   학생 "성적"을 관리하는 프로그램 이라고 한다면 : 이름, 학년, 반, 국어점수, 수학점수, 영어점수
	 *		   학생 "건강"을 관리하는 프로그램 이라고 한다면 : 이름, 학년, 반, 키, 몸무게, 달리기속도, 발사이즈
	 *
	 *			결국 추려진게 "이름, 나이, 키"라는 가정하에
	 *
	 *		4) 이름 : String name;
	 *			나이 : int age;
	 *			키	: double height; 
	 * 
	 * 
	 */

	public static void main(String[] args) {

		
	}

}
